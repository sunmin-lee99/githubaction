# 이 파일을 읽어서 github이 환경 구축하고, 실험한 후에 결과를 반환해줌

name: Python package # 이름

on: [push]

jobs:
  build: # 무엇을 실행할지

    runs-on: ubuntu-latest # 어디서 실행할지(개발하고 있는 프로젝트에 맞게 OS 선택)
    strategy:
      matrix:
        python-version: ["3.10", "3.11"] # 지금 테스트하고자하는 것(지금은 python 버전 테스트) : 이 파이썬 버전들에서 실험해보겠다!

    steps: # 테스트를 진행할 환경들을 순차적으로 적음
      - uses: actions/checkout@v3 # github에서 제공, 여기서 콘솔을 가져오라는 명령어
      - name: Set up Python ${{ matrix.python-version }} # 'matrix.python-version' : 위에서 지정한 변수, 여기가 3.10, 3.11로 바뀌면서 실행됨 (두번 실행)
        uses: actions/setup-python@v4 
        with:
          python-version: ${{ matrix.python-version }} 
      - name: Install dependencies 
        run:
          python -m pip install --upgrade pip
          pip install ruff pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi # 습관처럼 만들어야함 왜..?
      - name: Lint with ruff # Lint : comman한 convention을 지켰는지 확인해주는 프로그램
        run: |
          # stop the build if there are Python syntax errors or undefined names
          ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
          # default set of ruff rules with GitHub Annotations
          ruff --format=github --target-version=py37 .
      - name: Test with pytest # 우리가 궁극적으로 수행하고자하는 것
        run: |
          pytest
